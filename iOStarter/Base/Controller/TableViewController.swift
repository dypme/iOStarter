//
//  TableViewController.swift
//  iOStarter
//
//  Created by Macintosh on 07/04/22.
//  
//
//  This file was generated by Project Xcode Templates
//  Created by Wahyu Ady Prasetyo,
//  Source: https://github.com/dypme/iOStarter
//

import UIKit

class TableViewController: ViewController {
    
    @IBOutlet weak private(set) var tableView: UITableView!
    
    private(set) var refreshControl = UIRefreshControl()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        registerCell()
        setupMethod()
        setupView()
    }
    
    func registerCell() {
        
    }
    
    override func setupMethod() {
        super.setupMethod()
        
        tableView.delegate = self
        tableView.dataSource = self
        
        refreshControl.addTarget(self, action: #selector(refresh), for: .valueChanged)
    }
    
    override func setupView() {
        super.setupView()
        
        tableView.addSubview(refreshControl)
    }
    
    @objc private func refresh() {
        Task {
            await fetch()
        }
    }
    
    @objc override func fetch() async {
        await fetch(isLoadMore: false)
    }
    
    /// Fetch list data
    @objc func fetch(isLoadMore: Bool = false) async {
        
    }
    
    var loadingView: UIView? {
        if tableView(tableView, numberOfRowsInSection: 0) <= 0 {
            let loadingView = LoadIndicatorView()
            loadingView.startAnimating()
            return loadingView
        }
        return nil
    }
    
    var errorView: UIView? {
        if tableView(tableView, numberOfRowsInSection: 0) <= 0 {
            return ErrorView(message: L10n.Error.dataNotFound)
        }
        return nil
    }
    
    /// Footer view of table view
    var loadMoreView: UIView? {
        if isAllowLoadMore {
            let frame = CGRect(x: 0, y: 0, width: tableView.frame.width, height: 50)
            let loadingView = LoadIndicatorView()
            loadingView.startAnimating()
            loadingView.frame = frame
            return loadingView
        }
        return UIView(frame: .zero)
    }
    
}

extension TableViewController {
    /// Indicate that list can load more
    @objc open var isLoading: Bool {
        false
    }
    /// Indicate that list can load more
    @objc open var isAllowLoadMore: Bool {
        false
    }
    
    /// Distance from bottom to trigger load more
    @objc open var loadMoreDistance: CGFloat {
        50
    }
}

extension TableViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        fatalError("Cell tableview not set")
    }
}

extension TableViewController: UITableViewDelegate {
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        let offset = scrollView.contentOffset
        let bounds = scrollView.bounds
        let size = scrollView.contentSize
        let inset = scrollView.contentInset
        let y = offset.y + bounds.size.height - inset.bottom
        let h = size.height
        if y > (h + loadMoreDistance) {
            if isAllowLoadMore {
                Task {
                    await fetch(isLoadMore: true)
                }
            }
        }
    }
}
