//
//  BaseViewModelList.swift
//  iOStarter
//
//  Created by Macintosh on 07/04/22.
//  
//
//  This file was generated by Project Xcode Templates
//  Created by Wahyu Ady Prasetyo,
//  Source: https://github.com/dypme/iOStarter
//

import Foundation

class BaseViewModelList<T: BaseModel, V: BaseViewModel<T>>: ObservableObject {
    @Published var datas = [T]()
    
    var limit = 10
    var offset = 0
    @Published var isLoading = false
    @Published var isAllowLoadMore = false
    
    var numberOfItems: Int {
        return datas.count
    }
    
    var viewModelOfItems: [V] {
        datas.map({ V(data: $0) })
    }
    
    func viewModelOfItem(at indexPath: IndexPath) -> V {
        viewModelOfItems[indexPath.row]
    }
    
    func fetch(isLoadMore: Bool, path: ApiComponents) async {
        if isLoading {
            return
        }
        if isLoadMore {
            offset = 0
        }
        isLoading = true
        
        let response = await ApiManager.shared.request(to: path)
        let newDatas = response.json["data"].arrayValue.map({ T(fromJson: $0) })
        if isLoadMore {
            datas.append(contentsOf: newDatas)
        } else {
            datas = newDatas
        }
        
        offset += 1
        isAllowLoadMore = newDatas.count >= self.limit
        isLoading = false
    }
}
