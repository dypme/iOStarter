//
//  AlertSheetController.swift
//  iOStarter
//
//  Created by Macintosh on 07/04/22.
//  
//
//  This file was generated by Project Xcode Templates
//  Created by Wahyu Ady Prasetyo,
//  Source: https://github.com/dypme/iOStarter
//

import UIKit

class AlertSheetController: AlertController {
    
    override var shouldResignOnTouchOutside: Bool {
        didSet {
            overlayView?.isUserInteractionEnabled = shouldResignOnTouchOutside
            alertView?.gestureRecognizers?.forEach({ (gesture) in
                gesture.isEnabled = shouldResignOnTouchOutside
            })
        }
    }
    
    var panGestureEnabled: Bool = true
    private var bottomSafeAreaView: UIView!
    
    override init(image: UIImage? = nil, title: String? = nil, message: String? = nil, nibName: String = "AlertSheetView") {
        super.init(image: image, title: title, message: message, nibName: nibName)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func setupMethod() {
        super.setupMethod()
        
        if panGestureEnabled {
            let panGesture = UIPanGestureRecognizer(target: self, action: #selector(panGesture(_:)))
            alertView.addGestureRecognizer(panGesture)
        }
    }
    
    override func setupView() {
        super.setupView()
        
        alertView.gestureRecognizers?.forEach({ (gesture) in
            gesture.isEnabled = shouldResignOnTouchOutside
        })
        
        let safeAreaBottomInset = UIApplication.shared.activeWindow?.safeAreaInsets.bottom ?? 0
        bottomSafeAreaView = UIView(frame: CGRect(x: 0, y: 0, width: alertView.frame.width, height: safeAreaBottomInset + 20))
        bottomSafeAreaView.backgroundColor = appearance.alertColor
        alertView.addSubview(bottomSafeAreaView)
        alertView.sendSubviewToBack(bottomSafeAreaView)
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        
        bottomSafeAreaView?.frame.origin = CGPoint(x: 0, y: alertView.frame.height - 20)
    }
    
    @objc private func panGesture(_ recognizer: UIPanGestureRecognizer) {
        let translation = recognizer.translation(in: self.view)
        let updatedY = self.alertView.frame.origin.y + translation.y
        let isCanMove = updatedY > view.frame.height - alertView.frame.height && updatedY < view.frame.height
        let y = alertView.frame.height - (view.frame.height - updatedY)
        if isCanMove {
            alertView.transform = CGAffineTransform(translationX: 0, y: y)
        }
        recognizer.setTranslation(CGPoint.zero, in: self.view)
        
        if recognizer.state == .ended {
            let velocity = recognizer.velocity(in: self.view)
            
            if velocity.y > 250 {
                self.dismiss(animated: true)
            } else if velocity.y < -250 {
                UIView.animate(withDuration: 0.24) {
                    self.alertView.transform = CGAffineTransform(translationX: 0, y: 0)
                }
            } else {
                let halfH = alertView.frame.height / 2
                let remainH = view.frame.height - alertView.frame.minY
                if halfH > remainH {
                    self.dismiss(animated: true)
                } else {
                    UIView.animate(withDuration: 0.24) {
                        self.alertView.transform = CGAffineTransform(translationX: 0, y: 0)
                    }
                }
            }
        }
    }
}

extension AlertSheetController {
    override func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        AlertSheetPresentAnimationController()
    }
    
    override func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        AlertSheetDismissAnimationController()
    }
}


extension NSObject {
    func presentAlertSheet(image: UIImage? = nil, title: String?, message: String?, submitText: String = "OK", action: (() -> Void)? = nil) {
        let alert = AlertSheetController(image: image, title: title, message: message)
        alert.appearance.isCancelButtonHidden = true
        alert.appearance.submitText = submitText
        alert.show(action: action)
    }
    
    func presentConfirmationAlertSheet(image: UIImage? = nil, title: String?, message: String?, submitText: String = AlertAppearance().submitText, action: (() -> Void)? = nil) {
        let alert = AlertSheetController(image: image, title: title, message: message)
        alert.appearance.submitText = submitText
        alert.show(action: action)
    }
}
